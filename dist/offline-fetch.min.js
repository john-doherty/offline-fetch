/*!
 * offline-fetch - v1.3.1
 * Adds offline support to fetch
 * https://github.com/john-doherty/offline-fetch
 * @author John Doherty <www.johndoherty.info>
 * @license MIT
 */
!function(){"use strict";var e="object"==typeof self&&self.self===self&&self||"object"==typeof global&&global.global===global&&global||this;function t(t,o){if(!t||""===t)return Promise.reject(new Error("Please provide a URL"));if(void 0!==o&&"object"!=typeof o)return Promise.reject(new Error("If defined, options must be of type object"));if(!fetch)return Promise.reject(new Error("fetch not supported, are you missing the fetch polyfill?"));if(!o||!o.offline)return fetch(t,o);var r="object"!=typeof o.offline?{}:o.offline,i=e[r.storage||"sessionStorage"],f=parseInt(r.timeout||"10000",10),c=parseInt(r.retries||"-1",10),s=parseInt(r.retryDelay||"-1",10),a="number"==typeof r.expires?r.expires:-1,l=!0===r.renew,u=!0===r.debug,h=o.method||"GET",m=e.navigator&&!1===e.navigator.onLine,p="offline-fetch-"+function(e){var t=0;if(0===e.length)return t;for(var n=0,o=e.length;n<o;n++){var r=e.charCodeAt(n);t=(t<<5)-t+r,t&=t}return t}(h+"|"+t),d="function"==typeof o.offline.cacheKeyGenerator?o.offline.cacheKeyGenerator(t,o,p):p;return Object.keys(o||{}).forEach(function(e){null===o[e]&&delete o[e]}),new Promise(function(e){try{e(i.getItem(d))}catch(t){e(null)}}).then(function(e){e="string"==typeof e?JSON.parse(e):e;var r=null;e&&(r=new Response(e.content,{status:e.status,statusText:e.statusText,headers:{"Content-Type":e.contentType,"x-offline-cache":"HIT"}}));var h,p,y=!!(e&&a>0)&&Date.now()-e.storedAt>a;return r&&m?(u&&n("offlineFetch[cache] (offline): "+t),Promise.resolve(r)):!r||y||l?(h=f,p=fetch(t,o),new Promise(function(e,t){var n=setTimeout(function(){t(new Error("Promise Timed Out"))},h);p.then(function(t){clearTimeout(n),e(t)}).catch(function(e){clearTimeout(n),t(e)})})).then(function(e){if(e.status>=200&&e.status<=299){var o=e.headers.get("Content-Type")||"";(o.match(/application\/json/i)||o.match(/text\//i))&&e.clone().text().then(function(n){var r=JSON.stringify({url:t,status:e.status,statusText:e.statusText,contentType:o,content:n,storedAt:Date.now()});i.setItem(d,r)})}u&&n("offlineFetch[live]: "+t);try{e.headers.append("x-offline-cache","MISS")}catch{}return e}).catch(function(e){var i=e.message||"",f="Promise Timed Out"===i,a="Failed to fetch"===i,l="Network request failed"===i;return(f||a||l)&&r?(u&&f&&n("offlineFetch[cache] (timedout): "+t),u&&a&&n("offlineFetch[cache] (failed to fetch): "+t),u&&l&&n("offlineFetch[cache] (network failed): "+t),Promise.resolve(r)):!f&&c?(u&&n("offlineFetch["+i+"] (retrying): "+t),function(e,t,o,r,i){return o=o||3,r=r||1e3,new Promise(function(f,c){var s=function(a){i&&n("offlineFetch[retrying] ("+a+" of "+o+"): "+e),fetch(e,t).then(function(e){f(e)}).catch(function(e){a>0?setTimeout(function(){s(--a)},r):c(e)})};s(o)})}(t,o,c,s,u)):Promise.reject(e)}):(u&&n("offlineFetch[cache]: "+t),Promise.resolve(r))})}function n(e){console&&console.log&&console.log(e)}"undefined"==typeof window?module.exports=t:window.offlineFetch=t}();